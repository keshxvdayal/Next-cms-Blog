{"version":3,"file":"index.cjs","sources":["../../src/remix/VisualEditing.tsx"],"sourcesContent":["import { lazy, Suspense, useSyncExternalStore } from 'react'\n\nimport type { VisualEditingProps } from './VisualEditingComponent'\n\nconst VisualEditingComponent = lazy(() => import('./VisualEditingComponent'))\n\nconst subcribe = () => () => {}\n\n/**\n * @public\n */\nexport function VisualEditing(\n  props: VisualEditingProps,\n): React.ReactElement | null {\n  const mounted = useSyncExternalStore(\n    subcribe,\n    () => true,\n    () => false,\n  )\n\n  // Don't render Suspense while hydration, this enables compatibility with React v17 apps\n  // where Suspense where a browser-only API\n  if (!mounted) {\n    return null\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <VisualEditingComponent {...props} />\n    </Suspense>\n  )\n}\n"],"names":["VisualEditingComponent","lazy","Promise","resolve","then","require","subcribe","exports","VisualEditing","props","useSyncExternalStore","jsx","Suspense","fallback","children"],"mappings":"0HAIA,MAAMA,EAAyBC,EAAAA,MAAK,IAAMC,QAAOC,UAAAC,MAAA,WAAA,OAAAC,QAAA,iDAA2B,MAEtEC,EAAW,IAAM,OAyBvBC,QAAAC,cApBO,SACLC,GAUA,OARgBC,EAAAA,qBACdJ,GACA,KAAM,IACN,KAAM,IAUNK,MAACC,EAAAA,UAASC,SAAU,KAClBC,eAACd,EAAwB,IAAGS,MALvB,IAQX"}